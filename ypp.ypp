%{
#include "hpp.hpp"
%}
%defines %union { Sym*o; }
%token <o> SYM				/* symbol */
%token <o> LQ RQ			/* [] */
%token <o> EQ TILD			/* = ~ */
%type <o> ex scalar list
%%
REPL : | REPL ex	{ cout << $2->dump();
					  cout << "\n-----------------------------------------"; 
					  cout << $2->eval()->dump();
					  cout << "\n========================================="; };
scalar : SYM ;
ex : scalar
	| LQ list RQ	{ $$=$2; }
	| TILD ex		{ $$=$1; $$->push($2); }
	| ex EQ ex		{ $$=$2; $$->push($1); $$->push($3); }
;
list :				{ $$=new List(); }
	| list ex		{ $$=$1; $$->push($2); }
;
%%